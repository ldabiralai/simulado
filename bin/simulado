#!/usr/bin/env node
const fs = require('fs');
const Simulado = require('../src');
const commands = require('commander');

commands
  .option('-p, --port <port>', 'Port to listen on')
  .option('-f, --file <filepath>', 'Path to a mocks JSON file to mock on startup')
  .option('-c, --cert <filepath>', 'Path to certificate')
  .option('-k, --key <filepath>', 'Path to certificate key')
  .parse(process.argv);

Simulado.start({
  port: commands.port || process.env.PORT || 7001,
  https: {
    cert: commands.cert,
    key: commands.key
  }
});

if (commands.file) {
  const filePath = commands.file;
  const fileExists = fs.existsSync(filePath);

  if (fileExists) {
    console.log(`Mocking endpoints in '${filePath}'`);

    const fileContents = fs.readFileSync(filePath);
    const parsedMocks = JSON.parse(fileContents);

    Simulado.setMocks(parsedMocks).catch(() => {
      console.error(`* ERR: Failed to mock endpoints in '${filePath}'`);
      console.error('* ERR: Check you have a valid json format');
      console.error('* ERR: The file must contain an Array of MockResponses');
      process.exit(1);
    });
  } else {
    console.warn(`* WARN: No mocks created. File not found '${filePath}'`);
  }
}
